<!doctype html><html><head><meta charset="utf-8"/><title>Teja-CSV to Bulk BO orders-KITE</title><h1>CSV to Bulk BO orders-KITE</h1><a href="example.csv">Sample CSV to Use</a>&emsp;&emsp;&emsp;&emsp;&emsp;<button type="button" class="btn btn-success" onclick="placeBasketOrder()">Place All Orders</button>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Click on Allow popups/tutnoff popup blocker on this page</head><body><div id="inputs" class="clearfix"><input type="file" id="files" name="files[]" multiple/></div><hr/><output id="list"></output><hr/><table id="contents" style="width:100%; height:400px;" border></table><script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script><script src="jquery.csv.js"></script><script>$(document).ready(function(){if(isAPIAvailable()){$('#files').bind('change',handleFileSelect)}});function isAPIAvailable(){if(window.File&&window.FileReader&&window.FileList&&window.Blob){return!0}else{document.writeln('The HTML5 APIs used in this form are only available in the following browsers:<br />');document.writeln(' - Google Chrome: 13.0 or later<br />');document.writeln(' - Mozilla Firefox: 6.0 or later<br />');document.writeln(' - Internet Explorer: Not supported (partial support expected in 10.0)<br />');document.writeln(' - Safari: Not supported<br />');document.writeln(' - Opera: Not supported');return!1}}
function handleFileSelect(evt){var files=evt.target.files;var file=files[0];var output=''
output+='<span style="font-weight:bold;">'+escape(file.name)+'</span><br />\n';output+=' - FileType: '+(file.type||'n/a')+'<br />\n';output+=' - FileSize: '+file.size+' bytes<br />\n';output+=' - LastModified: '+(file.lastModifiedDate?file.lastModifiedDate.toLocaleDateString():'n/a')+'<br />\n';printTable(file);$('#list').append(output)}
var data;function printTable(file){var reader=new FileReader();reader.readAsText(file);reader.onload=function(event){var csv=event.target.result;data=$.csv.toArrays(csv);var html='';for(var row in data){html+='<tr>\r\n';for(var item in data[row]){html+='<td>'+data[row][item]+'</td>\r\n'}
html+='</tr>\r\n'}
$('#contents').html(html)};reader.onerror=function(){alert('Unable to read '+file.fileName)}}</script><script src="https://kite.trade/publisher.js?v=1"></script><script>var kite=null;KiteConnect.ready(function(){kite=new KiteConnect("ku2g9c95ix1i099l");kite.link(':button')});function placeBasketOrder(){kite=new KiteConnect("ku2g9c95ix1i099l");kite.link(':button');var x=data;var i=0;for(var row in x){if(i>0){var exchange=x[row][0];var variety=x[row][1];var tradingSymbol=x[row][2];var transaction=x[row][3];var orderType=x[row][5];var quantity=parseInt(x[row][6]);var limitPrice=parseFloat(x[row][7]);var triggerPrice=parseFloat(x[row][8]);var stoploss=parseFloat(x[row][10]);var squareoff=parseFloat(x[row][11]);var trailing_stoploss=parseFloat(x[row][12]);kite.add({"exchange":exchange,"variety":variety,"tradingsymbol":tradingSymbol,"transaction_type":transaction,"order_type":orderType,"quantity":quantity,"product":"MIS","price":limitPrice,"trigger_price":triggerPrice,"stoploss":stoploss,"squareoff":squareoff,"trailing_stoploss":trailing_stoploss})}
i++}}</script><br></br><footer>&copy;Copyright 2018 Teja-los7cau53</footer></html>



RegExp.escape=function(s){return s.replace(/[-\/\\^$*+?.()|[\]{}]/g,'\\$&')};(function(){'use strict';var $;if(typeof jQuery!=='undefined'&&jQuery){$=jQuery}else{$={}}
$.csv={defaults:{separator:',',delimiter:'"',headers:!0},hooks:{castToScalar:function(value,state){var hasDot=/\./;if(isNaN(value)){return value}else{if(hasDot.test(value)){return parseFloat(value)}else{var integer=parseInt(value);if(isNaN(integer)){return null}else{return integer}}}}},parsers:{parse:function(csv,options){var separator=options.separator;var delimiter=options.delimiter;if(!options.state.rowNum){options.state.rowNum=1}
if(!options.state.colNum){options.state.colNum=1}
var data=[];var entry=[];var state=0;var value='';var exit=!1;function endOfEntry(){state=0;value='';if(options.start&&options.state.rowNum<options.start){entry=[];options.state.rowNum++;options.state.colNum=1;return}
if(options.onParseEntry===undefined){data.push(entry)}else{var hookVal=options.onParseEntry(entry,options.state);if(hookVal!==!1){data.push(hookVal)}}
entry=[];if(options.end&&options.state.rowNum>=options.end){exit=!0}
options.state.rowNum++;options.state.colNum=1}
function endOfValue(){if(options.onParseValue===undefined){entry.push(value)}else{var hook=options.onParseValue(value,options.state);if(hook!==!1){entry.push(hook)}}
value='';state=0;options.state.colNum++}
var escSeparator=RegExp.escape(separator);var escDelimiter=RegExp.escape(delimiter);var match=/(D|S|\r\n|\n|\r|[^DS\r\n]+)/;var matchSrc=match.source;matchSrc=matchSrc.replace(/S/g,escSeparator);matchSrc=matchSrc.replace(/D/g,escDelimiter);match=new RegExp(matchSrc,'gm');csv.replace(match,function(m0){if(exit){return}
switch(state){case 0:if(m0===separator){value+='';endOfValue();break}
if(m0===delimiter){state=1;break}
if(/^(\r\n|\n|\r)$/.test(m0)){endOfValue();endOfEntry();break}
value+=m0;state=3;break;case 1:if(m0===delimiter){state=2;break}
value+=m0;state=1;break;case 2:if(m0===delimiter){value+=m0;state=1;break}
if(m0===separator){endOfValue();break}
if(/^(\r\n|\n|\r)$/.test(m0)){endOfValue();endOfEntry();break}
throw new Error('CSVDataError: Illegal State [Row:'+options.state.rowNum+'][Col:'+options.state.colNum+']');case 3:if(m0===separator){endOfValue();break}
if(/^(\r\n|\n|\r)$/.test(m0)){endOfValue();endOfEntry();break}
if(m0===delimiter){throw new Error('CSVDataError: Illegal Quote [Row:'+options.state.rowNum+'][Col:'+options.state.colNum+']')}
throw new Error('CSVDataError: Illegal Data [Row:'+options.state.rowNum+'][Col:'+options.state.colNum+']');default:throw new Error('CSVDataError: Unknown State [Row:'+options.state.rowNum+'][Col:'+options.state.colNum+']')}});if(entry.length!==0){endOfValue();endOfEntry()}
return data},splitLines:function(csv,options){if(!csv){return undefined}
options=options||{};var separator=options.separator||$.csv.defaults.separator;var delimiter=options.delimiter||$.csv.defaults.delimiter;options.state=options.state||{};if(!options.state.rowNum){options.state.rowNum=1}
var entries=[];var state=0;var entry='';var exit=!1;function endOfLine(){state=0;if(options.start&&options.state.rowNum<options.start){entry='';options.state.rowNum++;return}
if(options.onParseEntry===undefined){entries.push(entry)}else{var hookVal=options.onParseEntry(entry,options.state);if(hookVal!==!1){entries.push(hookVal)}}
entry='';if(options.end&&options.state.rowNum>=options.end){exit=!0}
options.state.rowNum++}
var escSeparator=RegExp.escape(separator);var escDelimiter=RegExp.escape(delimiter);var match=/(D|S|\n|\r|[^DS\r\n]+)/;var matchSrc=match.source;matchSrc=matchSrc.replace(/S/g,escSeparator);matchSrc=matchSrc.replace(/D/g,escDelimiter);match=new RegExp(matchSrc,'gm');csv.replace(match,function(m0){if(exit){return}
switch(state){case 0:if(m0===separator){entry+=m0;state=0;break}
if(m0===delimiter){entry+=m0;state=1;break}
if(m0==='\n'){endOfLine();break}
if(/^\r$/.test(m0)){break}
entry+=m0;state=3;break;case 1:if(m0===delimiter){entry+=m0;state=2;break}
entry+=m0;state=1;break;case 2:var prevChar=entry.substr(entry.length-1);if(m0===delimiter&&prevChar===delimiter){entry+=m0;state=1;break}
if(m0===separator){entry+=m0;state=0;break}
if(m0==='\n'){endOfLine();break}
if(m0==='\r'){break}
throw new Error('CSVDataError: Illegal state [Row:'+options.state.rowNum+']');case 3:if(m0===separator){entry+=m0;state=0;break}
if(m0==='\n'){endOfLine();break}
if(m0==='\r'){break}
if(m0===delimiter){throw new Error('CSVDataError: Illegal quote [Row:'+options.state.rowNum+']')}
throw new Error('CSVDataError: Illegal state [Row:'+options.state.rowNum+']');default:throw new Error('CSVDataError: Unknown state [Row:'+options.state.rowNum+']')}});if(entry!==''){endOfLine()}
return entries},parseEntry:function(csv,options){var separator=options.separator;var delimiter=options.delimiter;if(!options.state.rowNum){options.state.rowNum=1}
if(!options.state.colNum){options.state.colNum=1}
var entry=[];var state=0;var value='';function endOfValue(){if(options.onParseValue===undefined){entry.push(value)}else{var hook=options.onParseValue(value,options.state);if(hook!==!1){entry.push(hook)}}
value='';state=0;options.state.colNum++}
if(!options.match){var escSeparator=RegExp.escape(separator);var escDelimiter=RegExp.escape(delimiter);var match=/(D|S|\n|\r|[^DS\r\n]+)/;var matchSrc=match.source;matchSrc=matchSrc.replace(/S/g,escSeparator);matchSrc=matchSrc.replace(/D/g,escDelimiter);options.match=new RegExp(matchSrc,'gm')}
csv.replace(options.match,function(m0){switch(state){case 0:if(m0===separator){value+='';endOfValue();break}
if(m0===delimiter){state=1;break}
if(m0==='\n'||m0==='\r'){break}
value+=m0;state=3;break;case 1:if(m0===delimiter){state=2;break}
value+=m0;state=1;break;case 2:if(m0===delimiter){value+=m0;state=1;break}
if(m0===separator){endOfValue();break}
if(m0==='\n'||m0==='\r'){break}
throw new Error('CSVDataError: Illegal State [Row:'+options.state.rowNum+'][Col:'+options.state.colNum+']');case 3:if(m0===separator){endOfValue();break}
if(m0==='\n'||m0==='\r'){break}
if(m0===delimiter){throw new Error('CSVDataError: Illegal Quote [Row:'+options.state.rowNum+'][Col:'+options.state.colNum+']')}
throw new Error('CSVDataError: Illegal Data [Row:'+options.state.rowNum+'][Col:'+options.state.colNum+']');default:throw new Error('CSVDataError: Unknown State [Row:'+options.state.rowNum+'][Col:'+options.state.colNum+']')}});endOfValue();return entry}},helpers:{collectPropertyNames:function(objects){var o=[];var propName=[];var props=[];for(o in objects){for(propName in objects[o]){if((objects[o].hasOwnProperty(propName))&&(props.indexOf(propName)<0)&&(typeof objects[o][propName]!=='function')){props.push(propName)}}}
return props}},toArray:function(csv,options,callback){options=(options!==undefined?options:{});var config={};config.callback=((callback!==undefined&&typeof(callback)==='function')?callback:!1);config.separator='separator' in options?options.separator:$.csv.defaults.separator;config.delimiter='delimiter' in options?options.delimiter:$.csv.defaults.delimiter;var state=(options.state!==undefined?options.state:{});options={delimiter:config.delimiter,separator:config.separator,onParseEntry:options.onParseEntry,onParseValue:options.onParseValue,state:state};var entry=$.csv.parsers.parseEntry(csv,options);if(!config.callback){return entry}else{config.callback('',entry)}},toArrays:function(csv,options,callback){options=(options!==undefined?options:{});var config={};config.callback=((callback!==undefined&&typeof(callback)==='function')?callback:!1);config.separator='separator' in options?options.separator:$.csv.defaults.separator;config.delimiter='delimiter' in options?options.delimiter:$.csv.defaults.delimiter;var data=[];options={delimiter:config.delimiter,separator:config.separator,onPreParse:options.onPreParse,onParseEntry:options.onParseEntry,onParseValue:options.onParseValue,onPostParse:options.onPostParse,start:options.start,end:options.end,state:{rowNum:1,colNum:1}};if(options.onPreParse!==undefined){options.onPreParse(csv,options.state)}
data=$.csv.parsers.parse(csv,options);if(options.onPostParse!==undefined){options.onPostParse(data,options.state)}
if(!config.callback){return data}else{config.callback('',data)}},toObjects:function(csv,options,callback){options=(options!==undefined?options:{});var config={};config.callback=((callback!==undefined&&typeof(callback)==='function')?callback:!1);config.separator='separator' in options?options.separator:$.csv.defaults.separator;config.delimiter='delimiter' in options?options.delimiter:$.csv.defaults.delimiter;config.headers='headers' in options?options.headers:$.csv.defaults.headers;options.start='start' in options?options.start:1;if(config.headers){options.start++}
if(options.end&&config.headers){options.end++}
var lines=[];var data=[];options={delimiter:config.delimiter,separator:config.separator,onPreParse:options.onPreParse,onParseEntry:options.onParseEntry,onParseValue:options.onParseValue,onPostParse:options.onPostParse,start:options.start,end:options.end,state:{rowNum:1,colNum:1},match:!1,transform:options.transform};var headerOptions={delimiter:config.delimiter,separator:config.separator,start:1,end:1,state:{rowNum:1,colNum:1}};if(options.onPreParse!==undefined){options.onPreParse(csv,options.state)}
var headerLine=$.csv.parsers.splitLines(csv,headerOptions);var headers=$.csv.toArray(headerLine[0],options);lines=$.csv.parsers.splitLines(csv,options);options.state.colNum=1;if(headers){options.state.rowNum=2}else{options.state.rowNum=1}
for(var i=0,len=lines.length;i<len;i++){var entry=$.csv.toArray(lines[i],options);var object={};for(var j=0;j<headers.length;j++){object[headers[j]]=entry[j]}
if(options.transform!==undefined){data.push(options.transform.call(undefined,object))}else{data.push(object)}
options.state.rowNum++}
if(options.onPostParse!==undefined){options.onPostParse(data,options.state)}
if(!config.callback){return data}else{config.callback('',data)}},fromArrays:function(arrays,options,callback){options=(options!==undefined?options:{});var config={};config.callback=((callback!==undefined&&typeof(callback)==='function')?callback:!1);config.separator='separator' in options?options.separator:$.csv.defaults.separator;config.delimiter='delimiter' in options?options.delimiter:$.csv.defaults.delimiter;var output='';var line;var lineValues;var i;var j;for(i=0;i<arrays.length;i++){line=arrays[i];lineValues=[];for(j=0;j<line.length;j++){var strValue=(line[j]===undefined||line[j]===null)?'':line[j].toString();if(strValue.indexOf(config.delimiter)>-1){strValue=strValue.replace(new RegExp(config.delimiter,'g'),config.delimiter+config.delimiter)}
var escMatcher='\n|\r|S|D';escMatcher=escMatcher.replace('S',config.separator);escMatcher=escMatcher.replace('D',config.delimiter);if(strValue.search(escMatcher)>-1){strValue=config.delimiter+strValue+config.delimiter}
lineValues.push(strValue)}
output+=lineValues.join(config.separator)+'\n'}
if(!config.callback){return output}else{config.callback('',output)}},fromObjects:function(objects,options,callback){options=(options!==undefined?options:{});var config={};config.callback=((callback!==undefined&&typeof(callback)==='function')?callback:!1);config.separator='separator' in options?options.separator:$.csv.defaults.separator;config.delimiter='delimiter' in options?options.delimiter:$.csv.defaults.delimiter;config.headers='headers' in options?options.headers:$.csv.defaults.headers;config.sortOrder='sortOrder' in options?options.sortOrder:'declare';config.manualOrder='manualOrder' in options?options.manualOrder:[];config.transform=options.transform;if(typeof config.manualOrder==='string'){config.manualOrder=$.csv.toArray(config.manualOrder,config)}
if(config.transform!==undefined){var origObjects=objects;objects=[];var i;for(i=0;i<origObjects.length;i++){objects.push(config.transform.call(undefined,origObjects[i]))}}
var props=$.csv.helpers.collectPropertyNames(objects);if(config.sortOrder==='alpha'){props.sort()}
if(config.manualOrder.length>0){var propsManual=[].concat(config.manualOrder);let p;for(p=0;p<props.length;p++){if(propsManual.indexOf(props[p])<0){propsManual.push(props[p])}}
props=propsManual}
var o,p,line,output,propName;if(config.headers){output.push(props)}
for(o=0;o<objects.length;o++){line=[];for(p=0;p<props.length;p++){propName=props[p];if(propName in objects[o]&&typeof objects[o][propName]!=='function'){line.push(objects[o][propName])}else{line.push('')}}
output.push(line)}
return $.csv.fromArrays(output,options,config.callback)}};$.csvEntry2Array=$.csv.toArray;$.csv2Array=$.csv.toArrays;$.csv2Dictionary=$.csv.toObjects;if(typeof module!=='undefined'&&module.exports){module.exports=$.csv}}).call(this)



